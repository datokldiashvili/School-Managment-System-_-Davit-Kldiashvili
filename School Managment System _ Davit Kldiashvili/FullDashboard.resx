<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>